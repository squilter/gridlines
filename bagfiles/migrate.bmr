class update_uav_msgs_OptFlowSample_66310ece32534743a2b151ea8966cd5a(MessageUpdateRule):
	old_type = "uav_msgs/OptFlowSample"
	old_full_text = """
# OptFlowSample.msg
# Post-processed optical flow measurement

# Measurement ID (defined in params.py)
int32 meas_id

# Timestamp of measurement
time timestamp

# Quality
# scalar measure of flow quality [0,255]
# 255 => best quality
int32 quality

# Uncertainty
# scalar measure of uncertainty in range [0,1]
# 0 is most certain, 1 is least certain
# calculated from quality
float64 uncertainty

# Velocities
float64 x_vel
float64 y_vel
"""

	new_type = "uav_msgs/OptFlowSample"
	new_full_text = """
# OptFlowSample.msg
# Post-processed optical flow measurement

# Timestamp of measurement
time timestamp

# Integrated gyro roll rates for compensation
float32 integrated_xgyro
float32 integrated_ygyro
float32 integrated_zgyro

# Integrated flow
float32 integrated_x
float32 integrated_y

# Temperature
int32 temperature 		# *100 = degrees Celsius

# Quality
# scalar measure of flow quality [0,255]
# 255 => best quality
uint32 quality

# Ground distance [m]
float32 ground_distance
uint32 time_delta_distance_us	# us since distance measurement
"""

	order = 0
	migrated_types = [("OptFlowSample", "OptFlowSample")]

	valid = True

	def update(self, old_msg, new_msg):
		new_msg.timestamp = old_msg.timestamp
		#No matching field name in old message
		new_msg.integrated_xgyro = 0.
		#No matching field name in old message
		new_msg.integrated_ygyro = 0.
		#No matching field name in old message
		new_msg.integrated_zgyro = 0.
		#No matching field name in old message
		new_msg.integrated_x = 0.
		#No matching field name in old message
		new_msg.integrated_y = 0.
		#No matching field name in old message
		new_msg.temperature = 0
		#Primitive type changed
		new_msg.quality = 0
		#No matching field name in old message
		new_msg.ground_distance = 0.
		#No matching field name in old message
		new_msg.time_delta_distance_us = 0
		#No field to match field meas_id from old message
		#No field to match field uncertainty from old message
		#No field to match field x_vel from old message
		#No field to match field y_vel from old message
class update_uav_msgs_IMUSample_3c4f5d333e3be3422ec24524fd71a595(MessageUpdateRule):
	old_type = "uav_msgs/IMUSample"
	old_full_text = """
# IMUSample.msg
# IMU sensor data from single sample (assume all taken at same moment)

# Measurement ID (defined in params.py)
int32 meas_id

# Timestamp of measurement
time timestamp

# gyro data [rad/s]
float64 gyro_x
float64 gyro_y
float64 gyro_z

# acc data [g]
float64 acc_x
float64 acc_y
float64 acc_z

# mag data [B]
float64 mag_x
float64 mag_y
float64 mag_z
"""

	new_type = "uav_msgs/IMUSample"
	new_full_text = """
# IMUSample.msg
# IMU sensor data from single sample (assume all taken at same moment)

# Timestamp of measurement
time timestamp

# gyro data [rad/s]
float64 gyro_x
float64 gyro_y
float64 gyro_z

# acc data [m/s^2]
float64 acc_x
float64 acc_y
float64 acc_z

# mag data [T]
float64 mag_x
float64 mag_y
float64 mag_z
"""

	order = 0
	migrated_types = [("IMUSample", "IMUSample")]

	valid = True

	def update(self, old_msg, new_msg):
		new_msg.timestamp = old_msg.timestamp
		new_msg.gyro_x = old_msg.gyro_x
		new_msg.gyro_y = old_msg.gyro_y
		new_msg.gyro_z = old_msg.gyro_z
		new_msg.acc_x = old_msg.acc_x
		new_msg.acc_y = old_msg.acc_y
		new_msg.acc_z = old_msg.acc_z
		new_msg.mag_x = old_msg.mag_x
		new_msg.mag_y = old_msg.mag_y
		new_msg.mag_z = old_msg.mag_z
